package com.sqli.rh_manager.entities;
// Generated Dec 19, 2013 6:37:54 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ManagerRhStatus generated by hbm2java
 */
@Entity
@Table(name="manager_rh_status"
    ,catalog="rh_manager"
)
public class ManagerRhStatus  implements java.io.Serializable {


     private int id;
     private Collaborateur collaborateur;
     private Compte compte;
     private Boolean activation;
     private Set<Collaborateur> collaborateursForAncienManagerRh = new HashSet<Collaborateur>(0);
     private Set<Collaborateur> collaborateursForActualManagerRh = new HashSet<Collaborateur>(0);

    public ManagerRhStatus() {
    }

	
    public ManagerRhStatus(int id, Collaborateur collaborateur, Compte compte) {
        this.id = id;
        this.collaborateur = collaborateur;
        this.compte = compte;
    }
    public ManagerRhStatus(int id, Collaborateur collaborateur, Compte compte, Boolean activation, Set<Collaborateur> collaborateursForAncienManagerRh, Set<Collaborateur> collaborateursForActualManagerRh) {
       this.id = id;
       this.collaborateur = collaborateur;
       this.compte = compte;
       this.activation = activation;
       this.collaborateursForAncienManagerRh = collaborateursForAncienManagerRh;
       this.collaborateursForActualManagerRh = collaborateursForActualManagerRh;
    }
   
     @Id 
    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Collaborateur", nullable=false)
    public Collaborateur getCollaborateur() {
        return this.collaborateur;
    }
    
    public void setCollaborateur(Collaborateur collaborateur) {
        this.collaborateur = collaborateur;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Compte", nullable=false)
    public Compte getCompte() {
        return this.compte;
    }
    
    public void setCompte(Compte compte) {
        this.compte = compte;
    }
    
    @Column(name="Activation")
    public Boolean getActivation() {
        return this.activation;
    }
    
    public void setActivation(Boolean activation) {
        this.activation = activation;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="managerRhStatusByAncienManagerRh")
    public Set<Collaborateur> getCollaborateursForAncienManagerRh() {
        return this.collaborateursForAncienManagerRh;
    }
    
    public void setCollaborateursForAncienManagerRh(Set<Collaborateur> collaborateursForAncienManagerRh) {
        this.collaborateursForAncienManagerRh = collaborateursForAncienManagerRh;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="managerRhStatusByActualManagerRh")
    public Set<Collaborateur> getCollaborateursForActualManagerRh() {
        return this.collaborateursForActualManagerRh;
    }
    
    public void setCollaborateursForActualManagerRh(Set<Collaborateur> collaborateursForActualManagerRh) {
        this.collaborateursForActualManagerRh = collaborateursForActualManagerRh;
    }




}


